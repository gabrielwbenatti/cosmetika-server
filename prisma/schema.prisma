// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TIPO_PESSOA {
  CLI
  FORN
  TRANSP
  FUNC
}

model grupos_produtos {
  id     Int     @id @default(autoincrement())
  nome   String  @db.VarChar(127)
  status Boolean @default(true)

  produtos produtos[]
}

model produtos {
  id                Int     @id @default(autoincrement())
  nome              String  @db.VarChar(127)
  codigo_barra      String  @default("") @db.VarChar(127)
  movimenta_estoque Boolean @default(true)
  estoque_minimo    Decimal @default(0.00) @db.Decimal(10, 2)
  estoque_maximo    Decimal @default(0.00) @db.Decimal(10, 2)
  grupo_produto_id  Int?

  grupo_produto grupos_produtos? @relation(fields: [grupo_produto_id], references: [id])
  compras_itens compras_itens[]
}

model pessoas {
  id            Int           @id @default(autoincrement())
  razao_social  String        @db.VarChar(127)
  nome_fantasia String?       @db.VarChar(127)
  cpf_cnpj      String        @db.VarChar(31)
  tipo_pessoa   TIPO_PESSOA[] @default([CLI])
  usuario_id    Int?

  usuario usuarios? @relation(fields: [usuario_id], references: [id])
  compras compras[]
}

model usuarios {
  id           Int    @id @default(autoincrement())
  nome_usuario String @db.VarChar(63)
  senha        String @db.VarChar(255)

  pessoas pessoas[]
}

model compras {
  id               Int      @id @default(autoincrement())
  pessoa_id        Int
  data_emissao     DateTime
  data_entrada     DateTime
  valor_produto    Decimal  @default(0.00) @db.Decimal(10, 2)
  valor_outros     Decimal  @default(0.00) @db.Decimal(10, 2)
  valor_total      Decimal  @default(0.00) @db.Decimal(10, 2)
  numero_documento String   @db.VarChar(31)
  serie_documento  String   @db.VarChar(7)

  pessoa        pessoas         @relation(fields: [pessoa_id], references: [id])
  compras_itens compras_itens[]
}

model compras_itens {
  id             Int     @id @default(autoincrement())
  compra_id      Int
  produto_id     Int
  quantidade     Decimal @default(0.00) @db.Decimal(10, 2)
  valor_unitario Decimal @default(0.00) @db.Decimal(10, 2)
  valor_total    Decimal @default(0.00) @db.Decimal(10, 2)
  observacao     String

  compra  compras  @relation(fields: [compra_id], references: [id])
  produto produtos @relation(fields: [produto_id], references: [id])
}
