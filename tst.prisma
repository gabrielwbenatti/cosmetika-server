@ -1,317 +0,0 @@
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum TP_PESSOA {
    CLIENTE
    FORNECEDOR
    TRANSPORTADORA
    FUNCIONARIO

    @@map("TIPO_PESSOA")
}

enum TP_MOVIMENTO {
    ENTRADA
    SAIDA

    @@map("TIPO_MOVIMENTO")
}

// model empresa {
//   id            Int     @id @default(autoincrement())
//   razao_social  String  @db.VarChar(127)
//   nome_fantasia String? @db.VarChar(127)
//   cpf_cnpj      String  @db.VarChar(31)

//   dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
//   dt_hr_alteracao DateTime? @db.Timestamp()

//   @@map("empresas")
// }

// model usuario {
//   id           Int       @id @default(autoincrement())
//   email        String    @db.VarChar(255)
//   senha        String    @db.VarChar(255)
//   ultimo_login DateTime? @db.Timestamp()
//   is_admin     Boolean   @default(false)

//   dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
//   dt_hr_alteracao DateTime? @db.Timestamp()

//   assinaturas assinatura[]
//   empresa     empresa[]

//   @@map("usuarios")
// }

// model plano_assinatura {
//   id           Int     @id @default(autoincrement())
//   nome         String  @db.VarChar(63)
//   valor        Decimal @default(0.00) @db.Decimal(10, 2)
//   max_usuarios Int

//   assinaturas assinatura[]

//   @@map("planos_assinaturas")
// }

// model assinatura {
//   id                  Int @id @default(autoincrement())
//   usuario_id          Int
//   plano_assinatura_id Int

//   usuario          usuario          @relation(fields: [usuario_id], references: [id], onUpdate: Cascade)
//   plano_assinatura plano_assinatura @relation(fields: [plano_assinatura_id], references: [id], onUpdate: Cascade)

//   @@map("assinaturas")
// }

model grupo_produto {
    id     Int     @id @default(autoincrement())
    nome   String  @db.VarChar(127)
    status Boolean @default(true)

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    produtos produto[]

    @@map("grupos_produtos")
}

model linha_produto {
    id     Int     @id @default(autoincrement())
    nome   String  @db.VarChar(127)
    status Boolean @default(true)

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    produtos produto[]

    @@map("linhas_produtos")
}

model produto {
    id                Int     @id @default(autoincrement())
    nome              String  @db.VarChar(127)
    codigo_barra      String? @db.VarChar(127)
    referencia        String? @db.VarChar(63)
    movimenta_estoque Boolean @default(true)
    status            Boolean @default(true)
    estoque_minimo    Decimal @default(0.00) @db.Decimal(10, 2)
    estoque_maximo    Decimal @default(0.00) @db.Decimal(10, 2)
    grupo_produto_id  Int?
    linha_produto_id  Int?

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    grupo_produto        grupo_produto?         @relation(fields: [grupo_produto_id], references: [id], onUpdate: Cascade)
    linha_produto        linha_produto?         @relation(fields: [linha_produto_id], references: [id], onUpdate: Cascade)
    compras_itens        compra_item[]
    vendas_itens         venda_item[]
    produto_movimentacao produto_movimentacao[]

    @@map("produtos")
}

model produto_movimentacao {
    id             Int          @id @default(autoincrement())
    produto_id     Int
    operacao       TP_MOVIMENTO @default(SAIDA)
    quantidade     Decimal      @db.Decimal(10, 2)
    observacao     String       @db.VarChar(127)
    data_movimento DateTime     @default(now()) @db.Date

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    produto produto @relation(fields: [produto_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@map("produtos_movimentacoes")
}

model pessoa {
    id            Int     @id @default(autoincrement())
    razao_social  String  @db.VarChar(127)
    nome_fantasia String? @db.VarChar(127)
    cpf_cnpj      String? @db.VarChar(31)

    cep              String? @db.VarChar(15)
    endereco         String? @db.VarChar(127)
    bairro           String? @db.VarChar(127)
    numero           String? @db.VarChar(127)
    complemento      String? @db.VarChar(127)
    ponto_referencia String? @db.VarChar(127)

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    tipo_pessoa    TP_PESSOA[]     @default([CLIENTE])
    compras        compra[]
    vendas         venda[]
    contas_pagar   conta_pagar[]
    contas_receber conta_receber[]

    @@map("pessoas")
}

model compra {
    id               Int       @id @default(autoincrement())
    pessoa_id        Int
    data_emissao     DateTime  @default(now()) @db.Date
    data_entrada     DateTime? @db.Date
    valor_produto    Decimal   @default(0.00) @db.Decimal(10, 2)
    valor_frete      Decimal   @default(0.00) @db.Decimal(10, 2)
    valor_outros     Decimal   @default(0.00) @db.Decimal(10, 2)
    valor_total      Decimal   @default(0.00) @db.Decimal(10, 2)
    numero_documento String    @db.VarChar(31)
    serie_documento  String    @db.VarChar(7)

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    pessoa        pessoa        @relation(fields: [pessoa_id], references: [id], onUpdate: Cascade)
    compras_itens compra_item[]
    contas_pagar  conta_pagar[]

    @@map("compras")
}

model compra_item {
    id             Int     @id @default(autoincrement())
    compra_id      Int
    produto_id     Int
    quantidade     Decimal @default(0.00) @db.Decimal(10, 2)
    valor_unitario Decimal @default(0.00) @db.Decimal(10, 2)
    valor_total    Decimal @default(0.00) @db.Decimal(10, 2)
    observacao     String?

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    compra  compra  @relation(fields: [compra_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    produto produto @relation(fields: [produto_id], references: [id], onUpdate: Cascade)

    @@map("compras_itens")
}

model conta_pagar {
    id              Int      @id @default(autoincrement())
    pessoa_id       Int
    numero_titulo   String   @db.VarChar(63)
    valor           Decimal  @db.Decimal(10, 2)
    data_emissao    DateTime @db.Date
    data_vencimento DateTime @db.Date
    numero_parcela  Int      @db.SmallInt
    compra_id       Int?

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    pessoa            pessoa            @relation(fields: [pessoa_id], references: [id], onUpdate: Cascade)
    compra            compra?           @relation(fields: [compra_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    contas_pagamentos conta_pagamento[]

    @@map("contas_pagar")
}

model conta_pagamento {
    id              Int      @id @default(autoincrement())
    conta_pagar_id  Int
    data_pagamento  DateTime @db.Date
    valor_pagamento Decimal  @db.Decimal(10, 2)

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    conta_pagar conta_pagar @relation(fields: [conta_pagar_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@map("contas_pagamentos")
}

model venda {
    id            Int       @id @default(autoincrement())
    pessoa_id     Int
    data_emissao  DateTime  @default(now()) @db.Date
    data_entrega  DateTime? @db.Date
    valor_produto Decimal   @default(0.00) @db.Decimal(10, 2)
    valor_frete   Decimal   @default(0.00) @db.Decimal(10, 2)
    valor_outros  Decimal   @default(0.00) @db.Decimal(10, 2)
    valor_total   Decimal   @default(0.00) @db.Decimal(10, 2)

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    pessoa         pessoa          @relation(fields: [pessoa_id], references: [id], onUpdate: Cascade)
    contas_receber conta_receber[]
    vendas_itens   venda_item[]

    @@map("vendas")
}

model venda_item {
    id             Int     @id @default(autoincrement())
    venda_id       Int
    produto_id     Int
    quantidade     Decimal @default(0.00) @db.Decimal(10, 2)
    valor_unitario Decimal @default(0.00) @db.Decimal(10, 2)
    valor_total    Decimal @default(0.00) @db.Decimal(10, 2)
    observacao     String?

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    venda   venda   @relation(fields: [venda_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    produto produto @relation(fields: [produto_id], references: [id], onUpdate: Cascade)

    @@map("vendas_itens")
}

model conta_receber {
    id              Int      @id @default(autoincrement())
    pessoa_id       Int
    numero_titulo   String   @db.VarChar(63)
    valor           Decimal  @db.Decimal(10, 2)
    data_emissao    DateTime @db.Date
    data_vencimento DateTime @db.Date
    numero_parcela  Int      @db.SmallInt
    venda_id        Int?

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    pessoa              pessoa              @relation(fields: [pessoa_id], references: [id], onUpdate: Cascade)
    venda               venda?              @relation(fields: [venda_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    contas_recebimentos conta_recebimento[]

    @@map("contas_receber")
}

model conta_recebimento {
    id               Int      @id @default(autoincrement())
    conta_receber_id Int
    data_pagamento   DateTime @db.Date
    valor_pagamento  Decimal  @db.Decimal(10, 2)

    dt_hr_inclusao  DateTime  @default(now()) @db.Timestamp()
    dt_hr_alteracao DateTime? @db.Timestamp()

    conta_receber conta_receber @relation(fields: [conta_receber_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@map("contas_recebimentos")
}
